<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="img_barangay_news_image.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>